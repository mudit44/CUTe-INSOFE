head(mtcars)
head(mtcars)[0]
str(mtcars)
c <- 1:10
d <- 101:105
e <- c + d
e
str(mtcars)
summary(mtcars)
names(mtcars)
cars_data[c(2,8:11)] <- data.frame(apply(data_cars[c(2,8:11)],2,as.character))
cars_data[c(2,8:11)] <- data.frame(apply(cars_data[c(2,8:11)],2,as.character))
t = cars_data[c(2,8:11)] <- data.frame(apply(cars_data[c(2,8:11)],2,as.character))
t
str(cars_data)
dbinom(4,10,0.6)
barplot(geom_distrib, col='blue', xlab='Number of trials', ylab = 'Probability')
geom_distrib = dgeom(x=0:10,prob=0.15)
barplot(geom_distrib, col='blue', xlab='Number of trials', ylab = 'Probability')
#Ans3
dpois(3,5)
#Ans4
dpois(5,1.8)
#Ans4
dpois(5,3.6)
#Ans5
dexp(1,0.5)
#Ans5
1 - pexp(2,0.5)
#Ans5
pexp(2,0.5)
#Ans6
v = c[82,72,85,14,66,15,23,78,16,38,92,17]
#Ans6
v = c[(82,72,85,14,66,15,23,78,16,38,92,17)]
#Ans6
v = c(82,72,85,14,66,15,23,78,16,38,92,17)
v
mean_v = v.mean
mean_v = mean(v)
mean_v
sd(v)
z_score = ((v - mean_v)/t)
z_score = (v - mean_v)/t
z_score = v - mean_v
z_score
z_score/t
t = sd(v)
z_score/t
z_score = ((v - mean_v)/t)
z_score = ((v - mean_v)/t)
z_score
#Ans7
zscore_a = (75-70)/20
zscore_b = (55-40)/10
zscore_a
zscore_b
#Ans8
1-pnorm(72,67.2,5.41)
1-pnorm(5.41)
#Ans8
1-pnorm(72,67.2,5.41)
#Ans8
1-pnorm(72,67.2,5.41,lower.tail = FALSE)
#Ans8
1-pnorm(72,67.2,5.41)
#Ans9
pnorm(mean = 500,sd = 100) * 10000
#Ans9
pnorm(500,100) * 10000
#Ans9
pnorm(500,100) * 10000
#Ans9
pnorm(0,500,100) * 10000
#Ans9
(0,0,1) * 10000
#Ans9
pnorm(0,0,1) * 10000
#2
pnorm(0,0,1)
#2
pnorm(0,0,1) * 10000
#3
pnorm(-1.5,0,1) * 10000
pnorm(0.5,0,1) * 10000
#3
(pnorm(-1.5,0,1) * 10000) - (pnorm(0.5,0,1) * 10000)
#3
(pnorm(0.5,0,1) * 10000) - (pnorm(-1.5,0,1) * 10000)
#Ans9
#1 part
pnorm(0,0,1) * 10000
#2
pnorm(0,0,1) * 10000
#3
(pnorm(0.5,0,1) * 10000) - (pnorm(-1.5,0,1) * 10000)
load(file = mtcars)
load(database = mtcars)
data1 = mtcars
data1
data.frame(row.names = c(1,2,3))
d = data.frame(row.names = c(1,2,3))
d
d = data.frame(row.names = c(1,2,3), colnames(c("Age","Marks","Gender")))
d <- data.frame(age=c(10,11,12),marks=c(21,34,36),gender=c(1,1,2))
d
d$edu = as.factor(d$edu)
data1
data1[,1]
data$mpg
data1$mpg
data1[,'mpg']
subset("mpg")
subset(data1,select = c(1))
summary(d)
subset_eg2<-subset(data1,select = c(mpg,vs))
subset_eg3<-subset(data1,select = c(mpg:disp))
subset_eg3
subset_eg4<-subset(data1,select = c(1:4))
#condition to select rows in a dataset
subset(data1,c(mpg>25),select = c(hp))
#condition to select rows in a dataset
subset(data1,mpg>25,select = hp)
names(data1)
#select all the class that have mpg >25 and cylinders 6
subset(data1,c(mpg>25,cyl==6))
#select all the class that have mpg >25 and cylinders 6
subset(data1,c(mpg>25,cyl==4),select = )
#select all the cars that have mpg >25 and cylinders 6
subset(data1,c(mpg>25,cyl == 4))
subset(data1,mpg>25 & cyl == 4)
#subset all the cars that are either mpg <25 or cyl = 4
subset(data1,mpg<25 | cyl == 4)
#subset all the cars that are either mpg <25 or cyl = 4
subset(data1,mpg<25 || cyl == 4)
#subset all the cars that are either mpg <25 or cyl = 4
subset(data1,mpg<25 | cyl == 4)
#or
subset(data1,mpg<25 || cyl == 4)
#or
subset(data1,mpg>25 and cyl == 4)
#or
subset(data1,mpg>25 && cyl == 4)
#or
subset(data1,mpg>25 && cyl == 4)
#sort the data in descending order of mpg
sort(data1,TRUE)
#sort the data in descending order of mpg
sort(data1,mpg,TRUE)
#sort the data in descending order of mpg
sort(data1$mpg,TRUE)
#sort the data in descending order of mpg
sort(data1,decreasing = TRUE)
#sort the data in descending order of mpg
sorted = data1[order(data1$mpg, decreasing = TRUE),]
sorted
#highest mpg
sorted = data1[order(data1$mpg, decreasing = TRUE),][1,]
#highest mpg
sorted1 = data1[order(data1$mpg, decreasing = TRUE),][1,]
#sort the data in descending order of mpg
sorted = data1[order(data1$mpg, decreasing = TRUE),]
sorted
#highest mpg
sorted1 = data1[order(data1$mpg, decreasing = TRUE),][1,]
sorted1
#data is not sorted
max(data1)
#extract how many cylinders this car has
data1[which.max(data1$mpg)]
#extract how many cylinders this car has
data1[which.max(data1$mpg)]
#extract how many cylinders this car has
data1[which.max(data1$mpg)]
#extract how many cylinders this car has
data1[which.max("mpg"")]
#extract how many cylinders this car has
data1[which.max("mpg")]
#extract how many cylinders this car has
data1[which.max((data1$mpg))]
#extract how many cylinders this car has
data1[which.max((data1$mpg))]
#extract how many cylinders this car has
data1[which.max((data1$mpg,))]
#extract how many cylinders this car has
data1[which.max((data1$mpg),)]
#extract how many cylinders this car has
data1[which.max(data1$mpg),]
m = max(data_cars$mpg)
m = max(data1$mpg)
data1[data1$mpg==m,]
#for a set if two records are highest and have the same stats|features
m = max(data1$mpg)
data1[data1$mpg==m,]
#use subset to extract row names and number
m = min(data1$mpg)
data1[data1$mpg==m,]
#for a set if two records are highest and have the same stats|features
m = max(data1$mpg)
data1[data1$mpg==m,]
#create a column $grade if mpg > 25 then grade == 1 and mpg < 25 then grade == 2
df = mtcars
#create a column $grade if mpg > 25 then grade == 1 and mpg < 25 then grade == 2
data1$grade = ifelse(df$mpg>25,1,2)
#create a column $grade if mpg > 25 then grade == 1 and mpg < 25 then grade == 2
df1 = data1$grade = ifelse(df$mpg>25,1,2)
df1
data1
data1$grade1 = ifelse(df$mpg>25,"Good","BAD")
data1.head()
data1.head
head(data1)
#create another column if mpg > 25 good, 25 > mpg > 20 average , < 20 is bad
data1$grade2 = ifelse(sorted$mpg>25,"1",ifelse(sorted$mpg>18,"2","3"))
data1
#create another column if mpg > 25 good, 25 > mpg > 20 average , < 20 is bad
data1$grade2 = ifelse(sorted$mpg>25,"1",ifelse(sorted$mpg>18,"2","3"))
#Eg: Print a multiplication table in R
data = mtcars
data
data.names()
names(data)
df <- subset(data, 'carb'==4, select = 'mpg')
df
df <- subset(data, c('carb'==4), select = c('mpg'))
df
df <- subset(data,select = c('mpg','disp'),c('cyl')==4)
df
df <- subset(data,cyl == 4,mpg)
df
df <- subset(data,cyl == 4,c(mpg,cyl))
df
data[which.max('mpg')]
subset(data, c(mpg > 25) & c(cyl == 6))
subset(data, mpg > 25 & cyl == 6)
subset(data, mpg < 25 & cyl == 6)
subset(data, c(mpg < 25 & cyl == 4))
subset(data, c(mpg > 25 & cyl == 4))
subset(data, c(mpg<25 & cyl == 4))
data = mtcars
data
subset(data, c(mpg<25 & cyl == 4))
subset(data, c(mpg < 25 || cyl == 4))
#sort the data in descending order of mpg
sorted = sort(mpg,decreasing = TRUE)[1,]
#sort the data in descending order of mpg
sorted = sort(data['mpg'],decreasing = TRUE)[1,]
#sort the data in descending order of mpg
sorted = sort(data['mpg'],decreasing = TRUE)
#sort the data in descending order of mpg
sorted = data[order(data$mpg),decreasing=TRUE][1,]
#sort the data in descending order of mpg
sorted = (data['mpg'],decreasing=TRUE)[1,]
#sort the data in descending order of mpg
sorted = data(order(['mpg'],decreasing=TRUE))[1,]
#sort the data in descending order of mpg
order(data['mpg'],decreasing = TRUE)[1,]
#sort the data in descending order of mpg
sorted = order(data['mpg'],decreasing = TRUE)[1,]
#sort the data in descending order of mpg
sorted = order(data$mpg,decreasing = TRUE)[1,]
#sort the data in descending order of mpg
sorted = data(order(data$mpg,decreasing = TRUE))[1,]
#sort the data in descending order of mpg
sorted = order(data$mpg,decreasing=TRUE)
sorted
sorted[1,]
sorted[,1]
#sort the data in descending order of mpg
sorted = order(data$mpg,decreasing=TRUE)[1,]
#sort the data in descending order of mpg
sorted = data[order(data$mpg,decreasing=TRUE)][1,]
#sort the data in descending order of mpg
sorted = data[order(data$mpg,decreasing=TRUE)](1,)
#sort the data in descending order of mpg
sorted = data[order(data$mpg,decreasing=TRUE),][1,]
data.frame(x=c("Age","Class","Year"),row.names = c(1,2,3))
data.frame(age=c(10,11,12),class=c(6,7,8),year=c(2011,2010,2012)),row.names = c(1,2,3))
d = data.frame(age=c(10,11,12),class=c(6,7,8),year=c(2011,2010,2012))
d
x = data.frame(age=c(20,19,29),class=c("Mudit","Rohil","Vaibhav"),year==c(2011,2012,2013))
x = data.frame(age=c(20,19,29),class=c("Mudit","Rohil","Vaibhav"),year=c(2011,2012,2013))
x
data = mtcars
data
df1 = data[which.max(mpg)]
df1 = data[which.max(data$mpg)]
df1 = data[which.max(data$mpg),]
df1
x[2,3]
x
#Different ways to subset a dataset
subset_eg1<-subset(data1,select = c(1))
subset_eg1
#Different ways to subset a dataset
subset_eg1<-subset(data1,select = c(1))
subset_eg2<-subset(data1,select = c(mpg,vs))
subset_eg3<-subset(data1,select = c(mpg:disp))
subset_eg4<-subset(data1,select = c(1:4))
#condition to select rows mpg greater than 25 in mtcars dataset
subset(data1,mpg>25,select = hp)
#create a column $grade if mpg > 25 then grade == 1 and mpg < 25 then grade == 2
df1 = data1$grade = ifelse(df$mpg>25,1,2)
df1
help(databases)
help(load(databases))
library()
library(datasets)
r = library(datasets)
r
library(datasets)
r = library(datasets)
r = library(datasets)
r
help(library(datasets))
data()
#create another column if mpg > 25 good, 25 > mpg > 20 average , < 20 is bad
data1$grade2 = ifelse(sorted$mpg>25,"1",ifelse(sorted$mpg>18,"2","3"))
setwd("C:/Users/Mudit/Desktop/INSOFE/Cute1_Python_and_R/datasets")
col1 = read.csv('COL1.csv',header = TRUE)
col2 = read.csv('COL2.csv',header = TRUE)
col3 = read.csv('COL3.csv',header = TRUE)
col4 = read.csv('COL4.csv',header = TRUE)
col5 = read.csv('COL5.csv',header = TRUE)
rbind(col1,col2,col3,col4,col5)
consolidated_data <- rbind(col1,col2,col3,col4,col5)
nrows(consolidated_data)
nrow(consolidated_data)
sum(is.na(consolidated_data))
library(vegan)
consolidated_data <- centralImputation(consolidated_data)
library(DMwR)
consolidated_data <- centralImputation(consolidated_data)
consolidated_data
names(consolidated_data)
shapiro.test(consolidated_data$Acad_Score)
sw = shapiro.test(consolidated_data$Acad_Score)
hist(sw$statistic)
hist(sw$statistic, n= 250)
hist(sw$statistic, breaks = 50)
hist(sw$p.value, breaks = 50)
hist(qqnorm(sw$p.value))
qqnorm(sw$p.value)
hist(sw$p.value)
hist(qqnorm(consolidated_data$Acad_Score))
hist(consolidated_data$Acad_Score)
hist(consolidated_data$Overall_Score)
hist(consolidated_data$Acad_Score,breaks = 5)
hist(consolidated_data$Acad_Score,breaks = 100)
hist(consolidated_data$Acad_Score,breaks = 30)
hist(consolidated_data$Acad_Score,breaks = 25)
hist(consolidated_data$Acad_Score,breaks = 50)
hist(consolidated_data$Overall_Score, breaks = 50)
hist(consolidated_data$Overall_Score, breaks = 25)
hist(consolidated_data$Overall_Score, breaks = 5)
hist(consolidated_data$Overall_Score, breaks = 15)
hist(consolidated_data$Overall_Score, breaks = 10)
hist(density(consolidated_data$Acad_Score,breaks = 50))
hist(consolidated_data$Acad_Score,breaks = 50)
hist(consolidated_data$Overall_Score, breaks = 10)
hist(consolidated_data$Overall_Score, breaks = 10,freq = FALSE)
hist(consolidated_data$Acad_Score,breaks = 50,freq = FALSE)
density(consolidated_data$Acad_Score)
lines(density(consolidated_data$Acad_Score))
lines(density(consolidated_data$Overall_Score))
hist(consolidated_data$Overall_Score, breaks = 10,freq = FALSE)
lines(density(consolidated_data$Overall_Score))
consolidated_data <- rbind(col1,col2,col3,col4,col5)
sum(is.na(consolidated_data))
library(DMwR)
consolidated_data <- knnImputation(consolidated_data)
sum(is.na(consolidated_data))
placements <- read.csv('Placements.csv',header = TRUE)
placements
library(reshape)
library(reshape2)
names(placements)
placed <- melt(placements,id=c("CollegeID","StudentID"))
placed
placements <- read.csv('Placements.csv',header = TRUE)
placements
p1<- melt(placements,id=c("CollegeID","StudentID"))
p1
rm("Placed","p1")
rm("Placed")
placements
names(placements)
wide <- reshape(placements, v.names = "Placed", idvar = c("CollegeID","StudentID"))
wide <- reshape(placements, v.names = "Placed", idvar = c("CollegeID","StudentID"),direction = "wide")
wide <- reshape(placements, v.names = "Placed", idvar = c("CollegeID","StudentID"),direction = "long")
placements <- read.csv('Placements.csv',header = TRUE)
placements
rm("placed")
names(consolidated_data)
mergedData <- merge(consolidated_data,placements,by.x = c("CollegeID","StudentID"),by.y = c("CollegeID","StudentID"))
mergedData
nrow(mergedData)
rm("mergedData")
consolidated_data <- merge(consolidated_data,placements,by.x = c("CollegeID","StudentID"),by.y = c("CollegeID","StudentID"),all.x = TRUE,all.y = TRUE)
consolidated_data
nrow(consolidated_data)
sum(is.na(consolidated_data$Placed))
is.na(consolidated_data$Placed) <- "None"
nrow(consolidated_data)
is.na(consolidated_data$Placed) <- "None"
apply(consolidated_data$Placed,1,function(x){is.na(consolidated_data$Placed) <- "None"})
apply(consolidated_data$Placed,2,function(x){is.na(consolidated_data$Placed) <- "None"})
is.vector(consolidated_data$Placed)
is.data.frame(consolidated_data$Placed)
is.factor(consolidated_data$Placed)
apply(consolidated_data$Placed,2,is.factor(consolidated_data$Placed))
apply(is.factor(consolidated_data$Placed))
?apply
where(is.na(consolidated_data$Placed)) <- "None"
is.na(consolidated_data$Placed) <- "None"
nrow(consolidated_data)
is.na(consolidated_data$Placed) <- "None"
plot(consolidated_data$Placed)
plot(consolidated_data$Placed)
is.na(consolidated_data$Placed) <- NULL
nrow(consolidated_data$Placed)
consolidated_data <- merge(consolidated_data,placements,by.x = c("CollegeID","StudentID"),by.y = c("CollegeID","StudentID"),all.x = TRUE,all.y = TRUE)
plot(consolidated_data$Placed)
placements <- read.csv('Placements.csv',header = TRUE)
consolidated_data <- merge(consolidated_data,placements,by.x = c("CollegeID","StudentID"),by.y = c("CollegeID","StudentID"),all.x = TRUE,all.y = TRUE)
plot(consolidated_data$Placed)
sum(is.na(consolidated_data$Placed))
levels(consolidated_data$Placed)<-c(levels(consolidated_data$Placed),"None")
consolidated_data$Placed[is.na(consolidated_data$Placed)] <- "None"
plot(consolidated_data$Placed)
consolidated_data$isPlaced -> 0
consolidated_data$isPlaced <- 0
consolidated_data$isPlaced <- function(x) {
for i in nrow(consolidated_data$Placed){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
}
consolidated_data$isPlaced <- function(x) {
for i in nrow(consolidated_data$Placed)
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
for i in nrow(consolidated_data$Placed):
if(consolidated_data$Placed[i] == "None")
for (i in 1:nrow(consolidated_data$Placed){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
}
for (i in 1:nrow(consolidated_data$Placed){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
for (i in 1:nrow(consolidated_data$Placed)){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
levels(consolidated_data$Placed)<-c(levels(consolidated_data$Placed),"None")
consolidated_data$Placed[is.na(consolidated_data$Placed)] <- "None"
plot(consolidated_data$Placed)
consolidated_data$isPlaced <- 0
for (i in 1:nrow(consolidated_data$Placed)){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
consolidated_data$Placed
for (i in 1:length(consolidated_data$Placed)){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
consolidated_data$isPlaced
for (i in 1:length(consolidated_data$Placed)){
if(consolidated_data$Placed[i] == "None")
consolidated_data$isPlaced[i] == 2
else
consolidated_data$isPlaced[i] == 1
}
consolidated_data$isPlaced
consolidated_data$isPlaced <- ifelse(consolidated_data$Placed == "None", 1, 2)
consolidated_data$isPlaced
sum(consolidated_data$isPlaced == 1)
consolidated_data$CollegeID
sum((consolidated_data$CollegeID == "CID_1") && (consolidated_data$isPlaced == 1))
sum((consolidated_data$CollegeID == "CID_1") && (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_1") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_1") & (consolidated_data$isPlaced == 1))
subset(consolidated_data, select = c("Placed","isPlaced"))
sum((consolidated_data$CollegeID == "CID_1") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_2") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_5") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_1") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_2") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_3") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_4") & (consolidated_data$isPlaced == 2))
sum((consolidated_data$CollegeID == "CID_5") & (consolidated_data$isPlaced == 2))
boxplot(consolidated_data$Overall_Score)
hist(consolidated_data$Overall_Score)
